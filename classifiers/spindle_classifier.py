import os
import sys
import joblib
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

'''
Reads the data generated by cell_cubes_annotate and trains a random forest classifier
to predict whether a given segmentation is or is not a spindle.
'''

if __name__ == '__main__':

    # path to training data
    training_data_path = '/Volumes/bigData/wholeMount_volDist/220712_Fix_Emb_Flvw_Chn1GAP_PI_aTub647_Processed/N2V_Denoised/0_Analysis_01/0_data_cubes2/label_properties'
    csv_file_names = [f for f in os.listdir(training_data_path) if f.endswith('.csv') and not f.startswith('.')]
    csv_file_paths = [os.path.join(training_data_path, f) for f in csv_file_names]

    # store the data for each csv in a list temporarily
    training_data_concat = []
    for csv_file_path in csv_file_paths:
        df = pd.read_csv(csv_file_path)
        for property_dict in df.to_dict('records'):
            training_data_concat.append(property_dict)

    # merge all data into one dataframe
    df = pd.DataFrame(training_data_concat)
        
    # define the properties and classes
    X = df.iloc[:,0:5].values
    y = df.iloc[:,5].values

    # split into training and test sets
    X_train, X_test, Y_train, Y_test = train_test_split(X, y, test_size=0.5, random_state=0)

    # define and train the classifier
    classifier = RandomForestClassifier(n_estimators=100)
    classifier.fit(X_train, Y_train)
    y_pred = classifier.predict(X_test)
    a = accuracy_score(Y_test, y_pred)
    print(f'accuracy: {a}')
    print(classification_report(Y_test, y_pred))
    print(confusion_matrix(Y_test, y_pred))

    joblib.dump(classifier, os.path.join(sys.path[0], 'spindle_classifier.joblib'))

